{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Phonebook/Phonebook.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducers.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","services/LocalStorage.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","addContact","createAction","delContact","changeFilter","itemsReducer","createReducer","id","name","number","builder","addCase","state","action","payload","filter","items","filterReducer","_","contactsReducer","combineReducers","persistContactsConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","persistor","persistStore","ContactForm","addNewContact","useState","setName","setNumber","onSubmit","e","preventDefault","nanoid","className","s","mainForm","inputContainer","labelName","htmlFor","inputName","label","type","value","pattern","title","required","placeholder","onChange","target","buttonAddContact","Filter","useSelector","dispatch","useDispatch","mainContainer","ContactListItem","props","newContact","newContactName","contact","btn","onClick","handleDelete","ContactList","filterContacts","map","Phonebook","useEffect","localStorage","setItem","JSON","stringify","error","toLowerCase","includes","sectionTitle","some","alert","length","idToDelete","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b8d1bdf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__m_m7L\",\"ContactList\":\"ContactList_ContactList__1L_6v\",\"newContact\":\"ContactList_newContact__2AvIx\",\"newContactName\":\"ContactList_newContactName__-PZ1r\",\"btn\":\"ContactList_btn__3m6ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Phonebook_sectionTitle__12yo3\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add');\nconst delContact = createAction('contact/del');\nconst changeFilter = createAction('contact/filter');\n\nexport { addContact, delContact, changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, delContact, changeFilter } from './contactsActions';\nimport { combineReducers } from 'redux';\n\nconst itemsReducer = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  builder => {\n    builder\n      .addCase(addContact, (state, action) => [...state, action.payload])\n      .addCase(delContact, (state, action) =>\n        state.filter(items => items.id !== action.payload),\n      );\n  },\n);\n\nconst filterReducer = createReducer('', builder => {\n  builder.addCase(changeFilter, (_, action) => action.payload);\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contactsReducers';\n\nconst persistContactsConfig = {\n  key: 'items',\n  storage,\n  whitelist: ['items'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistContactsConfig, contactsReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ addNewContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addNewContact({ name, number, id: nanoid() });\n    reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.mainForm}>\n        <div className={s.inputContainer}>\n          <label className={s.labelName} htmlFor=\"text\">\n            Name\n          </label>\n          <input\n            className={s.inputName}\n            label=\"last\"\n            type=\"text\"\n            name=\"name\"\n            id=\"text\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Rosie Simpson,  d'Artagnan и т. п.\"\n            required\n            placeholder=\"Enter Name\"\n            onChange={e => setName(e.target.value)}\n          />\n        </div>\n        <div className={s.inputContainer}>\n          <label className={s.labelName} htmlFor=\"tel\">\n            Number\n          </label>\n          <input\n            className={s.inputName}\n            type=\"tel\"\n            name=\"number\"\n            id=\"tel\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"Enter Number\"\n            onChange={e => setNumber(e.target.value)}\n          />\n        </div>\n        <button className={s.buttonAddContact} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsActions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.mainContainer}>\n       <div className={s.inputContainer}>\n         <label className={s.labelName} htmlFor=\"filter\">\n           Find contact by name\n           </label>\n         \n      <input\n       className={s.inputName}\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filter}\n        placeholder=\"Filter\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      /></div>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nfunction ContactListItem(props) {\n  return (\n    <li className={s.newContact}>\n      <p className={s.newContactName}> {props.contact.name}</p>\n      <p className={s.newContactName}> {props.contact.number}</p>\n      <button\n         className={s.btn}\n        type=\"button\"\n        onClick={() => props.handleDelete(props.contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  handleDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ filterContacts, handleDelete }) {\n  return (\n    <div className={s.mainContainer}>\n      <ul>\n       <p className={s.ContactList}>Contact List</p>\n      {filterContacts.map(contact => (\n        <ContactListItem\n          contact={contact}\n          key={contact.id}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </ul></div>\n  );\n}\n\nContactList.propTypes = {\n  filterContacts: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import ContactForm from '../ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as storage from '../../services/LocalStorage';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport { addContact, delContact } from '../../redux/contacts/contactsActions';\nimport s from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    storage.save('contacts', contacts);\n  }, [contacts]);\n\n  const addNewContact = newContact => {\n    const isDuplicate = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    );\n    if (isDuplicate) {\n      return alert(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n  };\n\n  const handleDelete = idToDelete => {\n    dispatch(delContact(idToDelete));\n  };\n\n  const getFilterContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const filterContacts = getFilterContacts();\n\n  return (\n    <div>\n      <div>\n        <h1 className={s.sectionTitle}>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} />\n        <h2 className={s.sectionTitle}>Contacts</h2>\n        <Filter />\n      </div>\n      {filterContacts.length > 0 && (\n        <ContactList\n          filterContacts={filterContacts}\n          handleDelete={handleDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Phonebook;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import './App.css';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nfunction App() {\n  return <Phonebook />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '../src/redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__2Nt_p\",\"inputContainer\":\"ContactForm_inputContainer__2nOgb\",\"labelName\":\"ContactForm_labelName__3hvbs\",\"inputName\":\"ContactForm_inputName__syizF\",\"buttonAddContact\":\"ContactForm_buttonAddContact__33Ar_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Filter_mainContainer__2ZA5t\",\"inputContainer\":\"Filter_inputContainer__1arlK\",\"labelName\":\"Filter_labelName__2kFij\",\"inputName\":\"Filter_inputName__1RYhD\",\"buttonAddContact\":\"Filter_buttonAddContact__1CKY6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactListItem_mainContainer__1S-tb\",\"ContactList\":\"ContactListItem_ContactList__1w_Fi\",\"newContact\":\"ContactListItem_newContact__390NS\",\"newContactName\":\"ContactListItem_newContactName__ScY6l\",\"btn\":\"ContactListItem_btn__2bTGn\"};"],"sourceRoot":""}